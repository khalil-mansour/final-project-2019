apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: backend-staging-v2
  labels:
    app: backend-staging-v2
spec:
  selector:
    matchLabels:
      app: backend-staging-v2
      tier: web
  template:
    metadata:
      labels:
        app: backend-staging-v2
        tier: web
    spec:
      containers:
        - name: backend-staging-v2
          image: gcr.io/savvy-climber-252013/backend-staging:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 1
          volumeMounts:
            - name: my-secrets-volume-backend
              mountPath: /secrets/gcloud-storage
              readOnly: true

          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value:  /secrets/gcloud-storage/credentials.json
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                    "-instances=savvy-climber-252013:us-east1:staging-database=tcp:3306",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          volumeMounts:
            - name: my-secrets-volume
              mountPath: /secrets/cloudsql
              readOnly: true
      volumes:
        - name: my-secrets-volume
          secret:
            secretName: cloudsql-instance-credentials
        - name: my-secrets-volume-backend
          secret:
            secretName: gcloud-storage-instance-credentials

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  type: NodePort
  selector:
    app: backend-staging-v2
    tier: web 
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: backend-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: backend-staging-ip 
    networking.gke.io/managed-certificates: backend-certificate
spec:
  rules:
    - http:
         paths: 
         - path: /*
           backend:
            serviceName: backend-service 
            servicePort: 80